name: publish a docker image

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    strategy:
      matrix:
        base-image:
          [
            "nvidia/cuda:12.6.2-devel-ubuntu24.04",
            "nvidia/cuda:12.5.1-devel-ubuntu22.04",
            "nvidia/cuda:12.4.1-devel-ubuntu22.04",
          ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract CUDA version
        id: cuda-version
        run: |
          CUDA_VERSION=$(echo ${{ matrix.base-image }} | sed -n 's/.*cuda:\([0-9.]*\).*/\1/p')
          echo "cuda_version=$CUDA_VERSION" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-cuda${{ steps.cuda-version.outputs.cuda_version }}
            type=ref,event=pr,suffix=-cuda${{ steps.cuda-version.outputs.cuda_version }}
            type=semver,pattern={{version}},suffix=-cuda${{ steps.cuda-version.outputs.cuda_version }}
            type=semver,pattern={{major}}.{{minor}},suffix=-cuda${{ steps.cuda-version.outputs.cuda_version }}
            type=sha,suffix=-cuda${{ steps.cuda-version.outputs.cuda_version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm64/v8
          context: .
          build-args: |
            BASE_IMAGE=${{ matrix.base-image }}
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
